import sys


def send_request(data: str, finish: bool = False) -> int:
    sys.stdout.write(f'{data}\n')
    sys.stdout.flush()
    if finish:
        return 0
    server_answer = sys.stdin.readline()
    return int(server_answer)

'''
https://contest.yandex.ru/yacup/contest/19036/problems/D/

В Поиске Яндекса реализована так называемая политика «зелёного транка»: любой код, попадающий в репозиторий, с некоторыми оговорками гарантированно не ломает сборку и тесты.
Тесты, впрочем, бывают крайне сложными, и запускать их все на каждый коммит оказывается нецелесообразно. Так что для особенно сложных случаев реализована следующая процедура: тесты запускаются с некоторой регулярностью, а проверяется сразу набор коммитов. Таким образом, в течение некоторого времени в транк может попасть 
n
 непроверенных коммитов, среди которых как минимум один содержит ошибку.
В такой ситуации тестирующая система должна обнаружить номер 
m
 первого коммита, сломавшего тесты. Этот номер обладает следующим свойством: все коммиты с номерами, меньшими 
m
, успешно проходят тесты, а коммиты с номерами, большими либо равными 
m
, тесты не проходят. В данной задаче гарантируется, что коммит с указанными свойствами обязательно существует и является единственным.
В целях экономии ресурсов тестирующая система может проверять только один коммит за раз. Вам требуется написать программу, которая будет определять номер 
m
.
Эта задача немного необычна — в ней вам предстоит реализовать интерактивное взаимодействие с тестирующей системой. Это означает, что вы можете делать запросы и получать ответы в онлайн-режиме. Обратите внимание, что ввод/вывод в этой задаче — стандартный (то есть с экрана на экран). После вывода очередного запроса обязательно используйте функции очистки потока, чтобы часть вашего вывода не осталась в каком-нибудь буфере. Например, на С++ надо использовать функцию fflush(stdout), на Java вызов System.out.flush(), на Pascal flush(output) и stdout.flush() для языка Python.
Вы можете делать запросы к тестирующей системе. Каждый запрос — это вывод целого числа, принадлежащего диапазону от 
1
 до 
n
. В ответ тестирующая система вернёт один из двух результатов:

строка «1» (без кавычек), если коммит с соответствующим номером успешно проходит все тесты;
строка «0» (без кавычек), если коммит с соответствующим номером не проходит тесты.
Если ваша программа в точности знает номер 
m
, она должна вывести строку вида «! m», после чего завершить свою работу.
Вашей программе разрешается сделать не более 
2
5
 запросов.
 
'''
def main():
    n = 20
    n = sys.stdin.readline().strip()
    start = 1
    end = int(n)
    # mid = (start + end) // 2
    # server_response = send_request(str(start))
    # if server_response == '1' # Fails on the first commit
    #     send_request(f'! 1', finish=True)
    # else:
    #     server_response = None
    server_response = None

    while True:

        mid = (start + end) // 2
        # print(f'start={start}, end={end}, mid={mid}')
        if start == end and start == mid and end == mid:
            send_request(f'! {mid}', finish=True)
            return

        server_response = send_request(str(mid))

        if server_response == 1:  # commit succesful
            start = mid + 1
        elif server_response == 0:  # commit fails
            end = mid


if __name__ == '__main__':
    main()
